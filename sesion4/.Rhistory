############ SESIÓN 4: PROBABILIDAD Y FUNCIONES DE DISTRIBUCIÓN  ##############
###############################################################################
set.seed(2022)
sample(c("Aguila","Sol"),size=1,prob=c(0.5,0.5))
sample(c("Aguila","Sol"),size=1,prob=c(0.5,0.5))
sample(c("Aguila","Sol"),size=1,prob=c(0.5,0.5))
sample(c("Aguila","Sol"),size=1,prob=c(0.5,0.5))
sample(c("Aguila","Sol"),size=1,prob=c(0.5,0.5))
sample(c("Aguila","Sol"),size=1,prob=c(0.5,0.5))
n <- 1000
p <- 0.5
count = c()
for (i in seq(n)) {
x <- sample(c("Águila", "Sol"), size = 1, prob = c(p, 1-p))
if (x == "Águila") {
count[i] = 1
}
else
count[i] = 0
}
barplot(table(count)/length(count),
main = "Experimento de Bernoulli",
xlab = "Resultado",
names = c("Sol", "Águila"))
table(count)
table(count) / length(count)
?table
mean(count)
sd(count)
n <- 1000
p <- 0.7
count = c()
for (i in seq(n)) {
x <- sample(c("Águila", "Sol"), size = 1, prob = c(p, 1-p))
if (x == "Águila") {
count[i] = 1
}
else
count[i] = 0
}
?table
table(count) / length(count)
barplot(table(count)/length(count),
main = "Experimento de Bernoulli",
xlab = "Resultado",
names = c("Sol", "Águila"))
mean(count)
sd(count)
dbinom(x=0,size=10,prob=0.3)
dbinom(x=2,size=10,prob=0.3)
dbinom(x=4,size=10,prob=0.3)
dbinom(x=10,size=10,prob=0.3)
dbinom(x=0,size=10,prob=0.3)
dbinom(x=2,size=10,prob=0.3)
dbinom(x=4,size=10,prob=0.3)
dbinom(x=6,size=10,prob=0.3)
dbinom(x=8,size=10,prob=0.3)
dbinom(x=10,size=10,prob=0.3)
#La r es de random, estamos generando 10 mil muestras, para 10 clientes y la prob del 30%
binom <- rbinom(n=10000,size=10,prob=0.3)
barplot(table(binom)/length(binom),
main = "Distribución Binomial",
xlab = "# de clientes que realizan una compra")
table(binom)
dbinom(x = 0, size = 10, prob = 0.3) +
dbinom(x = 1, size = 10, prob = 0.3) +
dbinom(x = 2, size = 10, prob = 0.3) +
dbinom(x = 3, size = 10, prob = 0.3)
#Más fácil ejecutando esto:
pbinom(q=3, size=10,prob=0.3,lower.tail=TRUE)
pbinom(q=5, size=10,prob=0.3,lower.tail=FALSE)
dbinom(x = 6, size = 10, prob = 0.3) +
dbinom(x = 7, size = 10, prob = 0.3) +
dbinom(x = 8, size = 10, prob = 0.3) +
dbinom(x = 9, size = 10, prob = 0.3) +
dbinom(x = 10, size = 10, prob = 0.3)
mean(binom)
sd(binom)
{par(mfrow=c(1,3))
binom.der <- rbinom(n = 10000, size = 10, prob = 0.25)
barplot(table(binom.der)/length(binom.der),
main = "Sesgo hacia la derecha",
xlab = "X=x")
binom.sim <- rbinom(n = 10000, size = 10, prob = 0.5)
barplot(table(binom.sim)/length(binom.sim),
main = "Simétrica",
xlab = "X=x")
binom.izq <- rbinom(n = 10000, size = 10, prob = 0.75)
barplot(table(binom.izq)/length(binom.izq),
main = "Sesgo hacia la izquierda",
xlab = "X=x")}
barplot(table(binom.sim)/length(binom.sim),
main = "Simétrica",
xlab = "X=x")
{par(mfrow=c(1,3))
binom.der <- rbinom(n = 10000, size = 10, prob = 0.25)
barplot(table(binom.der)/length(binom.der),
main = "Sesgo hacia la derecha",
xlab = "X=x")
binom.sim <- rbinom(n = 10000, size = 10, prob = 0.5)
barplot(table(binom.sim)/length(binom.sim),
main = "Simétrica",
xlab = "X=x")
binom.izq <- rbinom(n = 10000, size = 10, prob = 0.9)
barplot(table(binom.izq)/length(binom.izq),
main = "Sesgo hacia la izquierda",
xlab = "X=x")}
{par(mfrow=c(1,3))
binom.der <- rbinom(n = 10000, size = 10, prob = 0.25)
barplot(table(binom.der)/length(binom.der),
main = "Sesgo hacia la derecha",
xlab = "X=x")
binom.sim <- rbinom(n = 10000, size = 10, prob = 0.5)
barplot(table(binom.sim)/length(binom.sim),
main = "Simétrica",
xlab = "X=x")
binom.izq <- rbinom(n = 10000, size = 10, prob = 0.75)
barplot(table(binom.izq)/length(binom.izq),
main = "Sesgo hacia la izquierda",
xlab = "X=x")}
dev.off()
#a) Grafica la función de distribución de la variable aleatoria. (Asume que se obtienen 10,000 muestras)
dbinom(x=10,size=10000,prob=0.15)
#a) Grafica la función de distribución de la variable aleatoria. (Asume que se obtienen 10,000 muestras)
rbinom(x=10,size=10000,prob=0.15)
#a) Grafica la función de distribución de la variable aleatoria. (Asume que se obtienen 10,000 muestras)
rbinom(x=10, size=10000, prob=0.15)
#a) Grafica la función de distribución de la variable aleatoria. (Asume que se obtienen 10,000 muestras)
rbinom(n=10, size=10000, prob=0.15)
#a) Grafica la función de distribución de la variable aleatoria. (Asume que se obtienen 10,000 muestras)
binom <- rbinom(n=10, size=10000, prob=0.15)
barplot(table(binom)/length(binom),
main = "Distribución Binomial",
xlab = "# piezas defectuosas")
#a) Grafica la función de distribución de la variable aleatoria. (Asume que se obtienen 10,000 muestras)
binom <- rbinom(n=10000, size=10, prob=0.15)
barplot(table(binom)/length(binom),
main = "Distribución Binomial",
xlab = "# piezas defectuosas")
#b) ¿Cuál es la probabilidad de que se produzcan dos unidades defectuosas?
dbinom(x = 2, size = 10, prob = 0.15)
#c) ¿Cuál es la probabilidad de que a lo mucho 4 unidades sean defectuosas?
pbinom(q=4, size=10,prob=0.15,lower.tail=TRUE)
#d) ¿Cuál es la probabiliad de que por lo menos tres unidades se encuentren defectuosa?
pbinom(q=3, size=10,prob=0.3,lower.tail=FALSE)
#e) ¿Cuál es la probabilidad de que entre 2 y 4 unidades se encuentren defectuosas?
pbinom(q=4, size=10,prob=0.3,lower.tail=TRUE) - pbinom(q=2, size=10,prob=0.3,lower.tail=TRUE)
set.seed(0202)
#e) ¿Cuál es la probabilidad de que entre 2 y 4 unidades se encuentren defectuosas?
pbinom(q=4, size=10,prob=0.3,lower.tail=TRUE) - pbinom(q=2, size=10,prob=0.3,lower.tail=TRUE)
#f) ¿Cuál es el número esperado de unidades defectuosas? ¿Con qué variación?
mean(binom)
sd(binom)
set.seed(0202)
#a) Grafica la función de distribución de la variable aleatoria. (Asume que se obtienen 10,000 muestras)
binom <- rbinom(n=10000, size=10, prob=0.15)
barplot(table(binom)/length(binom),
main = "Distribución Binomial",
xlab = "# piezas defectuosas")
#d) ¿Cuál es la probabiliad de que por lo menos tres unidades se encuentren defectuosa?
1 - pbinom(q=2, size=10,prob=0.3,lower.tail=TRUE) # 0.3503
#f) ¿Cuál es el número esperado de unidades defectuosas? ¿Con qué variación?
mean(binom)  # 1.5
sd(binom)  #1.12
#c) ¿Cuál es la probabilidad de que a lo mucho 4 unidades sean defectuosas?
pbinom(q=4, size=10,prob=0.15,lower.tail=TRUE) #0.99
{
curve(dnorm(x, mean = 170, sd = 10), from = 100, to = 200,
col='blue', main = "Densidad Normal:\nDiferente media",
ylab = "f(x)", xlab = "X")
abline(v = 170, lwd = 0.5, lty = 2)
curve(dnorm(x, mean = 150, sd = 10), from = 100, to = 200,
col='red', add = TRUE)
abline(v = 150, lwd = 0.5, lty = 2)
curve(dnorm(x, mean = 130, sd = 10), from = 100, to = 200,
col='green', add = TRUE)
abline(v = 130, lwd = 0.5, lty = 2)
}
{
curve(dnorm(x, mean = 150, sd = 5), from = 120, to = 180,
col='blue', main = "Densidad Normal:\nDiferente desviación estándar",
ylab = "f(x)", xlab = "X")
curve(dnorm(x, mean = 150, sd = 10), from = 120, to = 180,
col='red', add = TRUE)
curve(dnorm(x, mean = 150, sd = 15), from = 120, to = 180,
col='green', add = TRUE)
}
x <- seq(-4, 4, 0.01)*sd + mean
mean <- 175
sd <- 6
x <- seq(-4, 4, 0.01)*sd + mean
y <- dnorm(x, mean = mean, sd = sd)
plot(x, y, type = "l", xlab = "X", ylab = "f(x)",
main = "Densidad de Probabilidad Normal",
sub = expression(paste(mu == 175, " y ", sigma == 6)))
integrate(dnorm, lower = x[1], upper = x[length(x)], mean=mean, sd = sd)
integrate(dnorm, lower = x[1], 180, mean=mean, sd = sd)
pnorm(q=180, mean=mean, sd=sd, lower.tail=FALSE)
pnorm(q=180, mean=mean, sd=sd, lower.tail=TRUE)
par(mfrow = c(2, 2))
plot(x, y, type = "l", xlab = "", ylab = "")
title(main = "Densidad de Probabilidad Normal", sub = expression(paste(mu == 175, " y ", sigma == 6)))
polygon(c(min(x), x[x<=180], 180), c(0, y[x<=180], 0), col="red")
pnorm(q=165,mean=mean, sd=sd)
plot(x, y, type = "l", xlab = "", ylab = "")
title(main = "Densidad de Probabilidad Normal", sub = expression(paste(mu == 175, " y ", sigma == 6)))
polygon(c(min(x), x[x<=165], 165), c(0, y[x<=165], 0), col="yellow")
pnorm(q=180,mean=mean,sd=sd) - pnorm(q=165,mean=mean,sd=sd)
plot(x, y, type = "l", xlab="", ylab="")
title(main = "Densidad de Probabilidad Normal", sub = expression(paste(mu == 175, " y ", sigma == 6)))
polygon(c(165, x[x>=165 & x<=180], 180), c(0, y[x>=165 & x<=180], 0), col="green")
1 - pnorm(q=182,mean=mean, sd=sd)
plot(x, y, type = "l", xlab="", ylab="", xlim = c(150, 200))
title(main = "Densidad de Probabilidad Normal", sub = expression(paste(mu == 175, " y ", sigma == 6)))
polygon(c(182, x[x>=182], max(x)), c(0, y[x>=182], 0), col="blue")
dev.off()
b <- qnorm(p=0.75,mean=mean,sd=sd)
b
pnorm(q=179.0469,mean=mean,sd=sd)
pnorm(q = 100, mean = 120, sd = 85)
z <- (100 - 120)/85
z
pnorm(z,mean=0,sd=1)
pnorm(q = 100, mean = 120, sd = 85)
binom.aprox <- rbinom(n = 10000, size = 10, prob = 0.5)
(binom.mean <- mean(binom.aprox))
(binom.sd <- sd(binom.aprox))
barplot(table(binom.aprox)/length(binom.aprox),
main = "Distribución Binomial",
xlab = "X=x")
curve(dnorm(x, mean = binom.mean, sd = binom.sd), from=0, to=10,
col='blue', main = "Densidad de Probabilidad Normal",
ylab = "f(x)", xlab = "X")
"Ahora vamos a demostrar que la aproximación es buena, calculando el promedio y la
desviación estándar"
binom.aprox <- rbinom(n = 10000, size = 10, prob = 0.5)
(binom.mean <- mean(binom.aprox))
(binom.sd <- sd(binom.aprox))
barplot(table(binom.aprox)/length(binom.aprox),
main = "Distribución Binomial",
xlab = "X=x")
curve(dnorm(x, mean = binom.mean, sd = binom.sd), from=0, to=10,
col='blue', main = "Densidad de Probabilidad Normal",
ylab = "f(x)", xlab = "X")
dev.off() #quita la configuración de 3 columnas para graficar.
binom.aprox <- rbinom(n = 10000, size = 10, prob = 0.5)
(binom.mean <- mean(binom.aprox))
(binom.sd <- sd(binom.aprox))
barplot(table(binom.aprox)/length(binom.aprox),
main = "Distribución Binomial",
xlab = "X=x")
curve(dnorm(x, mean = binom.mean, sd = binom.sd), from=0, to=10,
col='blue', main = "Densidad de Probabilidad Normal",
ylab = "f(x)", xlab = "X")
normal.binom <- rnorm(n=10000,mean=binom.mean,sd=binom.sd)
mean(normal.binom)
sd(normal.binom)
x <- seq(-4, 4, 0.01)*sd + mean
y <- dnorm(x, mean = mean, sd = sd)
plot(x, y, type = "l", xlab = "X", ylab = "f(x)",
main = "Densidad de Probabilidad Normal",
sub = expression(paste(mu == 175, " y ", sigma == 6)))
set.seed(0202)
#a) Grafica la función de distribución de la variable aleatoria.
mean <- 80
sd <- 10
x <- seq(-4, 4, 0.01)*sd + mean
y <- dnorm(x, mean = mean, sd = sd)
plot(x, y, type = "l", xlab = "X", ylab = "f(x)",
main = "Densidad de Probabilidad Normal",
sub = expression(paste(mu == 175, " y ", sigma == 6)))
#a) Grafica la función de distribución de la variable aleatoria.
mean <- 80
sd <- 10
curve(dnorm(x,mean=mean,sd=10), from=40, to=120,col='blue',
main="Densidad de probabilidad",ylab="f(x)",xlab="X")
#b) ¿Cuál es la probabilidad de que la maquinaria termine el producto en una hora o menos?
pnorm(q=60,mean=mean,sd=10)
#c) ¿Cuál es la probabilidad de que el producto sea terminado en más de 1.5 horas, pero en menos de 2.5 horas?
pnorm(q=150,mean=mean, sd=sd) - pnorm(q=90,mean=mean, sd=sd)
#d) ¿Cuál es el intervalo de tiempo que deja exactamente al centro el 90% de probabilidad?
qnorm(p=0.1/2,mean=mean,sd=10)
qnorm(p=0.1/2,mean=mean,sd=10,lower.tail=FALSE)
#d) ¿Cuál es el intervalo de tiempo que deja exactamente al centro el 90% de probabilidad?
qnorm(p=0.1/2,mean=mean,sd=10)
qnorm(p=0.1/2,mean=mean,sd=10,lower.tail=FALSE)
