url = "https://raw.githubusercontent.com/beduExpert/Programacion-R-Santander-2022/main/Sesion-07/Data/cbe_data.csv"
CBE <- read.csv(url, header = TRUE)
head(CBE)
class(CBE)
Elec.ts <- ts(CBE[,3],start=c(1958,1), frequency=12) #
Beer.ts <- ts(CBE[,2],start=c(1958,1), frequency=12)#
Choc.ts <- ts(CBE[,1],start=c(1958,1), frequency=12)#
#1: Anuales, 4 Trimestrales, 12 mensuales, 52 semanales
class(Elec.ts);class(Beer.ts);class(Choc.ts)
plot(cbind(Elec.ts, Beer.ts, Choc.ts),
main = "Producci?n de Chocolate, Cerveza y Electricidad",
xlab = "Tiempo",
sub = "Enero de 1958 - Diciembre de 1990")
set.seed(3)
w <- rnorm(300) #
plot(w, type = "l", xlab = "")
title(main = "Ruido Blanco Gaussiano", xlab = "Tiempo")
mean(w);sd(w)
"La función de autocorrelación es una medida de la correlación entre las observaciones
temporales separadas por k rezagos."
acf(w)#
pacf(w)#
for (t in 2:1000) x[t] <- x[t-1] + w[t] #
plot(x, type = "l", main = "Caminata Aleatoria Simulada",
xlab = "t", ylab = expression(x[t]),
sub = expression(x[t]==x[t-1]+w[t]))
x <- w <- rnorm(1000)#
for (t in 2:1000) x[t] <- x[t-1] + w[t] #
plot(x, type = "l", main = "Caminata Aleatoria Simulada",
xlab = "t", ylab = expression(x[t]),
sub = expression(x[t]==x[t-1]+w[t]))
x <- w <- rnorm(1000)#
for (t in 2:1000) x[t] <- x[t-1] + w[t] #
plot(x, type = "l", main = "Caminata Aleatoria Simulada",
xlab = "t", ylab = expression(x[t]),
sub = expression(x[t]==x[t-1]+w[t]))
acf(x)
pacf(x)
plot(diff(x), type = "l", main = "Primera diferencia de X",
xlab = "t", ylab = expression(x[t]),
sub = expression(x[t]==x[t-1]+w[t]))
acf(diff(x))
pacf(diff(x))
#Coloca el número diez como semilla
set.seed(3)
x <- w <- rnorm(200)
for (t in 2:200) x[t] <- x[t-1] + w[t]
plot(x, type = "l", main = "Caminata Aleatoria Simulada",
xlab = "t", ylab = expression(x[t]),
sub = expression(x[t]==x[t-1]+w[t]))
adf(x,main="")
plot(x, type = "l", main = "Caminata Aleatoria Simulada",
xlab = "t", ylab = expression(x[t]),
sub = expression(x[t]==x[t-1]+w[t]))
acf(x,main="")
plot(x, type = "l", main = "Caminata Aleatoria Simulada",
xlab = "t", ylab = expression(x[t]),
sub = expression(x[t]==x[t-1]+w[t]))
acf(x,main="")
acf(x,main="")
title(main = "correlograma del proceso ar(1) simulado",
sub=expression(x[t]==0.8*x[t-1]+w[t]))
pacf(x,main="")
title(main="Correlograma Parcial del proceso AR(1) simulado",
sub=expression(x[t]==0.8*x[t-1]+w[t]))
ar(x,method="mle")
ar(x ,method = "mle")
#Coloca el número diez como semilla
set.seed(10)
x <- w <- rnorm(200)
for (t in 2:200) x[t] <- x[t-1] + w[t]
acf(x,main="")
title(main = "correlograma del proceso ar(1) simulado",
sub=expression(x[t]==0.8*x[t-1]+w[t]))
pacf(x,main="")
title(main="Correlograma Parcial del proceso AR(1) simulado",
sub=expression(x[t]==0.8*x[t-1]+w[t]))
ar(x, method = "mle")
set.seed(3)
x <- w <- rnorm(1000)
for(i in 3:1000) x[i] <- 0.5*x[i-1] + x[i-1] - 0.5*x[i-2] + w[i] + 0.3*w[i-1]
plot(x, type = "l",
main = "Serie simulada de un modelo ARIMA(1, 1, 1)",
xlab = "Tiempo",
ylab = expression(x[t]),
sub = expression(x[t] == 0.5*x[t-1] + x[t-1] - 0.5*x[t-2] + w[t] + 0.3*w[t-1]))
acf(x)
pacf(x)
acf(diff(x))
pacf(diff(x))
plot(Elec.ts, xlab = "", ylab = "")
title(main = "Serie de Producción de Electricidad Australiana",
ylab = "Producción de electricidad (GWh)",
xlab = "Tiempo")
plot(diff(Elec.ts), xlab = "", ylab = "")
title(main = "Serie Diferenciada de Producción de Electricidad Australiana",
xlab = "Tiempo", ylab = "Dif Serie",
sub = "Gráfica de la serie diferenciada de primer Órden")
plot(diff(log(Elec.ts)), xlab = "", ylab = "")
title(main = "Serie de log dif de Producción de Electricidad Australiana",
xlab = "Tiempo", ylab = "Dif log-Serie",
sub = "Gráfica de la serie log-transformada diferenciada de primer órden")
acf(diff(log(Elec.ts)))
pacf(diff(log(Elec.ts)))
fit <- arima(log(Elec.ts), order = c(0, 1, 1), seas = c(2, 0, 2))
pr <- predict(fit,12)$pred#
pr <- predict(fit,12)$pred#
fit <- arima(log(Elec.ts), order = c(0, 1, 1), seas = c(2, 0, 2))
pr <- predict(fit,12)$pred#
ts.plot(cbind(window(Elec.ts, start = 1981), exp(pr)), col = c("blue", "red"), xlab = "")
pr
