saludo <- "Hola, mundo!"
print(saludo)
saludo2 <- "hola emmanuel"
print(saludo)
print(saludo2)
"esto
es un comentario
multilinea"
saludo;despedida
saludo <- "Hola Mundo!"
saludo
despedida <- "Adiós Mundo"
despedida
saludo;despedida
saludo <- "Hola Mundo!"
saludo
despedida <- "Adiós Mundo"
despedida
saludo;despedida
saludo <- "Hola Mundo!"
saludo
despedida <- "Adiós Mundo"
despedida
saludo;despedida
?do.call
visitas.rest <- read.csv(file = 'https://raw.githubusercontent.com/beduExpert/Programacion-R-Santander-2022/main/Sesion-02/Data/RestaurantVisitors.csv',
header = TRUE)
visitas.rest
visitas.rest.select <- select(visitas.rest,date:spending)
library(dplyr)
visitas.rest.select <- select(visitas.rest,date:spending)
class(visitas.rest.select)
names(visitas.rest.select)
visitas.rest.select <- select(visitas.rest,date,spending,total)
class(visitas.rest.select)
names(visitas.rest.select)
visitas.rest %>% select(date, spending, total)
visitas.rest.orden <- visitas.rest %>% select(date,spending,totao) %>%
arrange(spending,desc())
visitas.rest.orden <- visitas.rest %>% select(date,spending,total) %>%
arrange(spending,desc())
visitas.rest.orden <- visitas.rest %>% select(date,spending,total) %>%
arrange(spending,desc(total))
head(visitas.rest.orden)
visitas.rest.filtro <- visitas.rest %>% select(date,spending,total) %>%
arrange(spending,desc(total)) %>%
filter(spending> 1000000)
head(visitas.rest.filtro)
visitas.rest.filtro <- visitas.rest %>% select(date,spending,total) %>%
arrange(spending,desc(total)) %>%
filter(spending> 1000000, spending < 1200000, total < 300)
head(visitas.rest.filtro)
tail(visitas.rest.per.visita)
tail(visitas.rest.filtro)
visitas.rest.per.visita <- visitas.rest %>% select(date,spending,total) %>%
mutate(spending_per_visita = spending/total)
head(visitas.rest.per.visita)
visitas.rest.per.visita <- visitas.rest %>% select(date,spending,total) %>%
mutate(spending_per_visita = spending/total) %>%
arrange(desc(spending_per_visita))
head(visitas.rest.per.visita)
visitas.rest.group.summ <- visitas.rest %>%
select(date, holiday, spending) %>%
mutate(holiday = factor(holiday, labels = c("No", "Yes"))) %>%
group_by(holiday) %>%
summarize(total_spending = sum(spending),
mean_spending = mean(spending),
sd_spending = sd(spending))
head(visitas.rest.group.summ)
## EJEMPLO 3: VISUALIZACIÓN DE DATOS CON GGPLOT
library(ggplot2)
names(mtcars)
head(mtcars)
ggplot(mtcars, aes(x=cyl, y=hp)) + geom_point()
ggplot(mtcars, aes(x=fact(cyl), y=hp)) + geom_point()
ggplot(mtcars, aes(x=factor(cyl), y=hp)) + geom_point()
ggplot(mtcars, aes(x=factor(cyl), y=hp, color=mpg)) + geom_point()
ggplot(mtcars, aes(x=factor(cyl), y = hp)) +
geom_point()
ggplot(mtcars, aes(x=factor(cyl), y = hp, color=mpg)) +
geom_point()
ggplot(mtcars, aes(x=factor(cyl), y = hp, color = mpg, size=wt)) +
geom_point()
ggplot(mtcars, aes(x=factor(cyl), y = hp, color = mpg, size = wt, shape=square)) +
geom_point()
ggplot(mtcars, aes(x=factor(cyl), y = hp, color = mpg, size = wt, shape=factor(vs))) +
geom_point()
?factor
ggplot(mtcars, aes(x=factor(cyl), y = hp, color = mpg, size = wt, shape=factor(vs))) +
geom_point()
ggplot(mtcars, aes(x = mpg, y=hp, color = am, size = wt)) +
geom_point()
g <- ggplot(mtcars, aes(x = mpg, y=hp, color = factor(am), size = wt)) +
geom_point(shape=1, alpha=0.6)
g <- ggplot(mtcars, aes(x = mpg, y=hp, color = factor(am), size = wt)) +
geom_point(shape=1, alpha=0.6)
g
g <- g + scale_y_continuous(limits = c(50, 350),
breaks = seq(50,350, 75)) +
scale_x_continuous(breaks = seq(10, 35, 5))
g
g <- g + scale_color_discrete("Transmission", labels = c("Automatic", "Manual")) +
scale_size("Weight", labels = c(">=2,000 lbs", ">=3,000 lbs", ">=4,000 lbs", ">=5,000 lbs"))
g
g <- g + labs(title = "Motor Card Road",
x = "Miles per Gallon",
y = "Horsepower") +
theme_classic()
g
ggsave("motorcardroad.jpg", plot = g)
setwd('/home/emmanuel/BeduFase2/beduR/sesion2/')
ggsave("motorcardroad.jpg", plot = g)
names(diamonds)
head(diamonds)
ggplot(diamonds, aes(cut)) +
geom_bar(fill = "darkblue", alpha = 0.5) +
scale_y_continuous(limits = c(0, 22500),
breaks = seq(0,22500, 2500)) +
labs(title = "Cut Diamonds",
x = "Cut type",
y = "Frequency") +
theme_classic()
fish <- read.csv("https://raw.githubusercontent.com/beduExpert/Programacion-R-Santander-2022/main/Sesion-02/Data/fish.csv")
fish <- mutate(fish, Capture = Capture/100000)
ggplot(fish, aes(x = Year, y = Capture)) +
geom_line()
ggplot(fish, aes(x = Year, y = Capture, linetype = Species)) +
geom_line() + theme_minimal()
ggplot(fish, aes(x = Year, y = Capture, linetype = Species)) +
geom_line()# + theme_minimal()
ggplot(fish, aes(x = Year, y = Capture, linetype = Species)) +
geom_line() + theme_minimal()
ds <- iris
ds
str(ds)
head(ds)
class(ds)
dim(ds)
View(ds)
complete.cases(ds)
library(ggplot2)
"se ejecuta la función"
ggplot(ds, aes(x = ds$Sepal.Length, y = ds$Sepal.Width,
color = ds$Species, size = ds$Petal.Width )) +
geom_point(shape = 10, alpha = 0.5)
library(dplyr)
"traemos los datos"
ds
iris_mean <- ds %>%
group_by(Species) %>%
summarize(media_sepal_len = mean(Sepal.Length),
media_sepal_wid = mean(Sepal.Width),
media_petal_len = mean(Petal.Length),
media_petal_wid = mean(Petal.Width))
head(iris_mean)
"resutado:"
> head(iris_mean)
head(iris_mean)
library(ggplot2)
"se ejecuta la función"
iris_mean <- ds %>%
group_by(Species) %>%
summarize(media_sepal_len = mean(Sepal.Length),
media_sepal_wid = mean(Sepal.Width),
media_petal_len = mean(Petal.Length),
media_petal_wid = mean(Petal.Width))
head(iris_mean)
graph <- ggplot(ds, aes(x = Sepal.Length, y = Sepal.Width,
color = Species, size = Petal.Width )) +
geom_point(shape = 10, alpha = 0.5)
graph
graph <- ggplot(ds, aes(x = Sepal.Length, y = Sepal.Width,
color = Species, size = Petal.Width )) +
geom_point(shape = 10, alpha = 0.5)
graph
graph <- graph +
geom_point(data = iris, shape = 23, size = 4, fill = "black", stroke = 2)
graph
ggplot(ds, aes(x = ds$Sepal.Length, y = ds$Sepal.Width,
color = ds$Species, size = ds$Petal.Width )) +
geom_point(shape = 10, alpha = 0.5)
ggplot(ds, aes(x = ds$Sepal.Length, y = ds$Sepal.Width,
color = ds$Species, size = ds$Petal.Width )) +
geom_point(shape = 10, alpha = 0.5)
graph <- ggplot(ds, aes(x = Sepal.Length, y = Sepal.Width,
color = Species, size = Petal.Width )) +
geom_point(shape = 10, alpha = 0.5)
graph
graph <- graph +
geom_point(data = iris, shape = 23, size = 4, fill = "black", stroke = 2)
graph
graph
ggplot(ds, aes(x = ds$Sepal.Length, y = ds$Sepal.Width,
color = ds$Species, size = ds$Petal.Width )) +
geom_point(shape = 10, alpha = 0.5)
